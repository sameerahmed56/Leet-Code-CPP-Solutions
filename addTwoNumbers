class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* ans = nullptr;
        ListNode* head = nullptr;
        ans = new ListNode();
        ans -> val = -1;
        int carry = 0, sum = 0;
        while(l1 != nullptr && l2 != nullptr){
            sum = l1 -> val + l2 -> val + carry;
            carry = 0;
            
            ListNode* newNode;
            newNode = new ListNode();
            newNode -> val = sum;
            if(ans -> val != -1 ){
                ans -> next = newNode;
                ans = ans -> next;  
            }
            else{
                ans =  newNode;
                head = ans;
            }
            l1 = l1 -> next;
            l2 = l2 -> next;
        }
        if(l1 != nullptr){
            while(l1 != nullptr){
                sum = l1 -> val + carry;
                carry = 0;
                if(sum > 9){
                    carry = 1;
                    sum = sum % 10;
                }
                ListNode* newNode;
                newNode = new ListNode();
                newNode -> val = sum;
                if(ans -> val != -1 ){
                ans -> next = newNode;
                ans = ans -> next;  
                }
                else{
                    ans =  newNode;
                    head = ans;
                }
                l1 = l1 -> next;
            }
        }
        else{
            while(l2 != nullptr){
                sum = l2 -> val + carry;
                carry = 0;
                if(sum > 9){
                    carry = 1;
                    sum = sum % 10;
                }
                ListNode* newNode;
                newNode = new ListNode();
                newNode -> val = sum;
                if(ans -> val != -1 ){
                    ans -> next = newNode;
                    ans = ans -> next;  
                }
                else{
                    ans =  newNode;
                    head = ans;
                }
                l2 = l2 -> next;
            }
        }
        if(carry != 0){
            ListNode* newNode;
            newNode = new ListNode();
            newNode -> val = carry;
            ans -> next = newNode;
            ans = ans -> next;  
            
        }
        return head;
    }
};
