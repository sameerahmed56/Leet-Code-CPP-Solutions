class Solution {
public:
    vector<vector<int>> diagonalSort(vector<vector<int>>& mat) {
        int m =  mat.size(), n = mat[0].size();
        for(int k =0; k < m; k++){
            vector<int> temp;
            int j = 0, i = k;
            while(i<m && j < n){
                temp.push_back(mat[i++][j++]);
            }
            sort(temp.begin(), temp.end());
            i = k, j = 0;
            int curr = 0;
            while(i<m && j < n){
                mat[i++][j++] = temp[curr++];
            }
        }
        for(int k = 1; k < n; k++){
            vector<int> temp;
            int j = k , i = 0;
            while(i<m && j < n){
                temp.push_back(mat[i++][j++]);
            }
            sort(temp.begin(), temp.end());
            i = 0, j = k;
            int curr = 0;
            while(i<m && j < n){
                mat[i++][j++] = temp[curr++];
            }
        }
        return mat;
    }
};
