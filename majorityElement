class Solution {
public:
    int majorityElement(vector<int>& nums) {
        unordered_map<int, int> umap;
        for(int i: nums){
            if(umap.find(i) != umap.end()){
                umap[i]++;
            }
            else{
                umap[i] = 1;
            }
        }
        int ans = 0, maxCount = 0;
        for (auto itr = umap.begin(); itr != umap.end(); itr++)
        {
            if(itr->second>maxCount){
                maxCount = itr->second;
                ans = itr->first;
            }
        }
        return ans;
    }
};

// Boyer-Moore Voting Algorithm
class Solution {
public:
    int majorityElement(vector<int>& nums) {
        int count = 0;
        int candidate = NULL;
        for (int num : nums) {
            if (count == 0) {
                candidate = num;
            }
            count += (num == candidate) ? 1 : -1;
        }
        return candidate;
    }
};
