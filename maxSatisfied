class Solution {
public:
    int maxSatisfied(vector<int>& customers, vector<int>& grumpy, int minutes) {
        int n = customers.size(),  ans = 0,maxOfCanAdd = 0, curr = 0, prev = 0;
        for(int j = 0; j < minutes && j < n; j++){
            if(grumpy[j] == 1){
                curr += customers[j];
            }
        }
        maxOfCanAdd = max(maxOfCanAdd,curr);
        prev = curr;
        curr =0;
        if(grumpy[0] == 0) ans+= customers[0];
        for(int i = 1; i <n; i++){
            if(grumpy[i] == 0) ans+= customers[i];
            curr = prev;
            if(grumpy[i-1] == 1) curr -= customers[i-1];
            if(i+minutes-1 < n && grumpy[i+minutes-1] == 1) curr += customers[i+minutes-1];
            maxOfCanAdd = max(maxOfCanAdd,curr);
            prev = curr;
            curr = 0;
        }
        return ans + maxOfCanAdd;
    }
};
