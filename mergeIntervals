class Solution {
public:
    vector<vector<int>> merge(vector<vector<int>>& intervals) {
        int n = intervals.size(), k = 0;
        vector<vector<int>> ans;
        std::sort(std::begin(intervals), std::end(intervals), [](const vector<int>& a, const vector<int>& b){
        return a[0] < b[0] ;
        });
        while(k < n){
            int start = intervals[k][0];
            int end = intervals[k][1];
            while(k < n && end >= intervals[k][0]){
                end = max(intervals[k][1],end);
                k++;
            } 
            ans.push_back({start,end});
        }
        return ans;
    }
};
