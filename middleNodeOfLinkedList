/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* middleNode(ListNode* head) {
        ListNode *middle;
        middle = head;
        int i = 0;
        while(head != nullptr){
            head = head -> next;
            if(i % 2 == 0 && i != 0){
                middle = middle -> next;
            }
            i++;
        }
        if(i % 2 == 0)
            middle = middle -> next;
        
        return middle;
    }
};

//another solution fast and slow pointer
class Solution {
public:
    ListNode* middleNode(ListNode* head) {
        ListNode *slow = head, *fast = head;
        while(fast && fast-> next){
            slow = slow->next; fast = fast->next->next;
        }
        return slow;
    }
};
