class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        vector<int> vect = {};
        if(matrix.size() == 0){
            return vect;
        }
        int i = 0, j = 0, r = matrix.size(), c = matrix[0].size();
        int count = 0, type = 0;
        while(count < r*c ){
            if(matrix[i][j] >= -100 && i < r && j < c){
                vect.push_back(matrix[i][j]);
                matrix[i][j] = -500;

            }
            if(type % 4 == 0){
                if(j < c - 1 && matrix[i][j+1] >= -100){
                    j++;
                }
                else{
                    type++;
                    i++;
                }
            }
            else if(type % 4 == 1){
                if(i < r - 1 && matrix[i+1][j] >= -100){
                    i++;
                }
                else{
                    type++;
                    j--;
                }
                
            }
            else if(type % 4 == 2){
                if(j > 0 && matrix[i][j-1] >= -100){
                    j--;
                }
                else{
                    type++;
                    i--;
                }
                
            }
            else if(type % 4 == 3){
                if(i > 0 && matrix[i-1][j] >= -100){
                    i--;
                }
                else{
                    type++;
                    j++;
                }
                
            }
            count++;
        }
        return vect;
    }
};
